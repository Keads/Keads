version: '3'
services:
  stream-service:
    build:
      context: ./stream-service
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - mongodb
      - kafka
      - consul

  flask-service:
    build:
      context: ./flask-service
      dockerfile: Dockerfile
    ports:
      - 5000:5000
    depends_on:
      - mongodb

  mongodb:
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db

  kafka:
    image: wurstmeister/kafka:2.13-2.8.0
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "topic-name:1:1"
    volumes:
      - kafka_data:/var/lib/kafka/data

  consul:
    image: consul
    ports:
      - 8500:8500

  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
  keycloak:
    image: jboss/keycloak
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - DB_VENDOR=h2
    ports:
      - 8081:8080
    depends_on:
      - postgres

  postgres:
    image: postgres
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data


volumes:
  mongodb_data:
  kafka_data:
